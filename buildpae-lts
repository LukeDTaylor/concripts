#!/bin/bash

# Edits for linux-lts (c) 2012 by Vyacheslav Stetskevych, based on http://www.wizetek.com/bash/buildpae

#
# buildpae
#
# - modifies the stock kernel PKGBUILD and config files from ABS
# - builds binary packages and signs with PGP key
# - creates source package for AUR
#
#    syntax:    buildpae [-c|-t]
#
#        -c, --core
#        -t, --testing
#
# Tom Wizetek <tom@wizetek.com>
#
# update 16: 2012-08-11 v3.5.1 followed upstream changes to PKGBUILD
# update 15: 2012-07-28 v3.4.6 added package signing
# update 14: 2011-11-10 v3.1 adjustments for updated kernel PKGBUILD (new patches - MD5, LEDS_ALIX2 in config)
# update 13: 2011-08-17 v3.0.2 fixed modifying pkgbase and appending pkgdesc
# update 12: 2011-08-08 v3.0.1 updated for kernel 3.0
# update 11: 2011-05-15 delete groups=('base'); ESC key = quit when prompted
# update 10: 2011-04-12 small bugfix when passing command line arguments
# update 9:  2011-03-26 new resync action, new automated build process via command arguments
# update 8:  2010-12-11
# update 7:  2010-11-28
# update 6:  2010-11-26
# update 5:  2010-09-30
# update 4:  2010-06-03
# update 3:  2010-03-28
# update 2:  2010-03-21
# update 1:  2010-02-10
# original:  2010-01-30
#

# where to build packages
#########################
_BUILDPATH=~/builds
#########################

# automated build process
case $1 in
  -c|--core) _syncabs=c && _repo=core && _splitpkg=b && _buildnow=y ;;
  -t|--testing) _syncabs=t && _repo=testing && _splitpkg=b && _buildnow=y ;;
  '') ;;
  *) echo "Unrecognized option: $1" ;;
esac

kernelver()
{
  _kverinst=$(pacman -Q linux-lts 2>/dev/null | awk '{print $2}')
  _kverpae=$(pacman -Q linux-lts-pae 2>/dev/null | awk '{print $2}')
  _pbcore=/var/abs/core/linux-lts/PKGBUILD
  _pbtesting=/var/abs/testing/linux-lts/PKGBUILD
  _kvercore=$(grep 'pkgver=' ${_pbcore} 2>/dev/null | cut -d'=' -f2)
  _kvercore=${_kvercore}-$(grep 'pkgrel=' ${_pbcore} 2>/dev/null | cut -d'=' -f2)
  _kvertesting=$(grep 'pkgver=' ${_pbtesting} 2>/dev/null | cut -d'=' -f2)
  _kvertesting=${_kvertesting}-$(grep 'pkgrel=' ${_pbtesting} 2>/dev/null | cut -d'=' -f2)
  echo -e "\nKernel version info:\n\ninstalled stock ARCH\t${_kverinst}\ninstalled PAE\t\t${_kverpae}\navailable ABS core\t${_kvercore}\navailable ABS testing\t${_kvertesting}\n"
}

kernelver

syncabs()
{
  if ! [[ ${_syncabs} ]]
  then
    echo -en "Sync package 'linux-lts' from ABS repo: [c]ore, [t]esting or [B]oth?  [s]kip, [q]uit =>"
    read -n 1 _syncabs
    [[ ${_syncabs} ]] && echo
  fi
  case ${_syncabs} in
    c|C) abs core/linux-lts || sudo abs core/linux-lts && kernelver ;;
    t|T) abs testing/linux-lts || sudo abs testing/linux-lts && kernelver ;;
    b|B|'') _syncabs=b ; abs core/linux-lts && abs testing/linux-lts || sudo abs core/linux-lts && sudo abs testing/linux-lts && kernelver ;;
    s|S) unset _syncabs ; echo ;;
    q|Q|.) echo -e "\nQuit!\n" ; exit 1 ;;
    *) unset _syncabs ; syncabs ;;
  esac
}

syncabs

absrepo()
{
  echo -en "Use ABS repo: [C]ore or [t]esting?  [r]esync, [q]uit =>"
  read -n 1 _absrepo
  [[ ${_absrepo} ]] && echo
  case ${_absrepo} in
    c|C|'') _repo='core' ;;
    t|T) _repo='testing' ;;
    r|R) echo ; syncabs ; absrepo ;;
    q|Q|.) echo -e "\nQuit!\n" ; exit 1 ;;
    *) absrepo ;;
  esac
}

[[ ${_repo} ]] || absrepo

_PKGBUILD=/var/abs/${_repo}/linux-lts/PKGBUILD
[[ ! -e ${_PKGBUILD} ]] && echo -e "\nCould not find ${_PKGBUILD}\nSync ABS later again before building packages.\n" && exit 1

pkgver=$(sed -n 's/^pkgver=//p' ${_PKGBUILD})
pkgrel=$(sed -n 's/^pkgrel=//p' ${_PKGBUILD})
_path=${_BUILDPATH}/linux-lts-pae-${_basekernel}${pkgver}-${pkgrel}
echo -e "\nBuild directory: ${_path}\n"
mkdir -p ${_path}
cd ${_path}
cp /var/abs/${_repo}/linux-lts/* .
cp PKGBUILD PKGBUILD.orig
cp config config.orig
cp linux-lts.preset linux-lts-pae.preset
cp linux-lts.install linux-lts-pae.install

#
# config
#
sed -i 's/CONFIG_HIGHMEM4G=y/# CONFIG_HIGHMEM4G is not set/' config
sed -i 's/# CONFIG_HIGHMEM64G is not set/CONFIG_HIGHMEM64G=y/' config
sed -i '$a\
\
# Tom Wizetek: settings (set to default) not included in stock config\
CONFIG_XEN=n\
CONFIG_I2O_EXT_ADAPTEC_DMA64=y' config

#
# PKGBUILD
#
sed -i '2i# Maintainer: Tom Wizetek <tom@wizetek.com>' PKGBUILD
sed -i '/^pkgbase=/d' PKGBUILD
#sed -i '/#pkgbase=/ s/#//; s/custom/pae/' PKGBUILD
sed -i '/#pkgbase=/ c\pkgbase=linux-lts-pae' PKGBUILD
sed -i "/^arch=/ s/ 'x86_64'//" PKGBUILD
sed -i "s/ 'config.x86_64'$//" PKGBUILD
sed -i 's/and modules/& with PAE support (HIGHMEM64G)/' PKGBUILD
#sed -i "/groups=('base')/d" PKGBUILD
sed -i '$a\
# workaround for uploading split packages to AUR\
pkgname=linux-lts-pae\
pkgdesc="The ${pkgbase} kernel and modules with PAE support (HIGHMEM64G)"\
' PKGBUILD

#
# checksums
#
sed -i '/md5sums=(/,/)/d' PKGBUILD
makepkg -g >> PKGBUILD
echo >> PKGBUILD
sed -i '/# vim:set/ {H;d}; ${x}' PKGBUILD

#
# src pkg
#
makepkg --source || makepkg --source --force

#
# bin pkg
#
buildnow()
{
  echo -en "Modifications completed. Build packages now? [Y/n|q] =>"
  read -n 1 _buildnow
  [[ ${_buildnow} ]] && echo
  case ${_buildnow} in
    y|Y|'') ;;
    n|N|q|Q|.) echo -e "\nTo build packages later using current configuration, run 'makepkg' in the build directory.\n" ; exit 1 ;;
    *) buildnow ;;
  esac
}

[[ ${_buildnow} ]] || buildnow

makepkg --syncdeps --install --sign --log || makepkg --sign -siRfL || (rm -r ${_path}/{src,pkg} && makepkg --sign -siL)

#
# repo db & sign
#
repo-add --verify --sign linux-lts-pae.db.tar.gz *.pkg.tar.xz

# eof
